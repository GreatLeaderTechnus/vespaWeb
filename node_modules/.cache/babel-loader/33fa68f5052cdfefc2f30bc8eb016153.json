{"ast":null,"code":"var _jsxFileName = \"/Users/mmorteo/CodeShet/websites/calendarSite/src/components/NavbarComponent/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn-medium', 'btn-large'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLE.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${checkButtonStyle} ${checkButtonSize}`,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/mmorteo/CodeShet/websites/calendarSite/src/components/NavbarComponent/Button.js"],"names":["React","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","STYLE","includes","checkButtonSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,CACX,cADW,EAEX,cAFW,CAAf;AAKA,MAAMC,KAAK,GAAG,CACV,YADU,EAEV,WAFU,CAAd;AAKA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,WAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMhB;AAEF,QAAMC,gBAAgB,GAAGC,KAAK,CAACC,QAAN,CAAeJ,WAAf,IAA8BA,WAA9B,GAA4CN,MAAM,CAAC,CAAD,CAA3E;AAEA,QAAMW,eAAe,GAAGV,KAAK,CAACS,QAAN,CAAeH,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAK,GAAEO,gBAAiB,IAAGG,eAAgB,EAA5D;AACA,IAAA,IAAI,EAAEP,IADN;AAAA,cAGKD;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CApBM;KAAMD,M","sourcesContent":["import React from 'react'\nimport './Button.css'\n\nconst STYLES = [\n    'btn--primary',\n    'btn--outline'\n]\n\nconst SIZES = [\n    'btn-medium',\n    'btn-large'\n]\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n}) => {\n     \n    const checkButtonStyle = STYLE.includes(buttonStyle) ? buttonStyle : STYLES[0]\n    \n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n    return (\n        <button className = {`${checkButtonStyle} ${checkButtonSize}`}\n        type={type}>\n            \n            {children}\n\n        </button>\n    )\n}"]},"metadata":{},"sourceType":"module"}