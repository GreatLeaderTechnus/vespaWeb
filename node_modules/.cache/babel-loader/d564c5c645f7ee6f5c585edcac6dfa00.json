{"ast":null,"code":"var _jsxFileName = \"/Users/mmorteo/CodeShet/websites/personalWebsite/src/components/Clock.jsx\";\nimport React, { Component } from 'react';\nimport * as dateFns from \"date-fns\"; //Purpose: Comonponent that provides the current Date and Time\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props); //This declared the state of time at the very beginning\n\n    this.time = {\n      currentMonth: new Date(),\n      currentDay: new Date(),\n      currentTime: new Date()\n    };\n    this.state = {\n      time: new Date().toLocaleTimeString()\n    };\n  }\n\n  //This happens when the component mount and the setInterval function get called with a call back function updateClock()\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.updateClock(), 1000);\n  } //This section clears setInterval by calling intervalID so as to optimise memory\n\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  } //This function set the state of the time to a new time\n\n\n  updateClock() {\n    this.setState({\n      time: new Date().toLocaleTimeString()\n    });\n  }\n\n  renderCurrentDay() {\n    const week = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    var dayElement = this.time.currentDay;\n    var dayOfWeek = week[dayElement.getDay()];\n    return dayOfWeek;\n  }\n\n  renderDay() {\n    const dateFormat = \"d MMMM yyyy\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Today is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.renderCurrentDay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dateFns.format(this.time.currentMonth, dateFormat)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.renderDay()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", this.state.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Clock;","map":{"version":3,"sources":["/Users/mmorteo/CodeShet/websites/personalWebsite/src/components/Clock.jsx"],"names":["React","Component","dateFns","Clock","constructor","props","time","currentMonth","Date","currentDay","currentTime","state","toLocaleTimeString","componentDidMount","intervalID","setInterval","updateClock","componentWillUnmount","clearInterval","setState","renderCurrentDay","week","dayElement","dayOfWeek","getDay","renderDay","dateFormat","format","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB,C,CAEA;;;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAGd;;AAHc,SAUlBC,IAVkB,GAUX;AACHC,MAAAA,YAAY,EAAE,IAAIC,IAAJ,EADX;AAEHC,MAAAA,UAAU,EAAG,IAAID,IAAJ,EAFV;AAGHE,MAAAA,WAAW,EAAE,IAAIF,IAAJ;AAHV,KAVW;AAId,SAAKG,KAAL,GAAY;AACRL,MAAAA,IAAI,EAAE,IAAIE,IAAJ,GAAWI,kBAAX;AADE,KAAZ;AAIH;;AAQD;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAC1B,KAAKC,WAAL,EADyB,EAEzB,IAFyB,CAA7B;AAIH,GAvByB,CAyB1B;;;AACAC,EAAAA,oBAAoB,GAAE;AAClBC,IAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACH,GA5ByB,CA8B1B;;;AACAE,EAAAA,WAAW,GAAE;AACT,SAAKG,QAAL,CAAc;AACVb,MAAAA,IAAI,EAAE,IAAIE,IAAJ,GAAWI,kBAAX;AADI,KAAd;AAGH;;AAEDQ,EAAAA,gBAAgB,GAAG;AACf,UAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAA+B,WAA/B,EAA2C,UAA3C,EAAuD,QAAvD,EAAgE,UAAhE,CAAb;AACA,QAAIC,UAAU,GAAG,KAAKhB,IAAL,CAAUG,UAA3B;AAEA,QAAIc,SAAS,GAAGF,IAAI,CAACC,UAAU,CAACE,MAAX,EAAD,CAApB;AAEA,WAAQD,SAAR;AAEH;;AACDE,EAAAA,SAAS,GAAE;AAEP,UAAMC,UAAU,GAAG,aAAnB;AAEA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAO,KAAKN,gBAAL;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ,oBAE2C;AAAA;AAAA;AAAA;AAAA,cAF3C,eAGI;AAAA,kBAAOlB,OAAO,CAACyB,MAAR,CAAe,KAAKrB,IAAL,CAAUC,YAAzB,EAAuCmB,UAAvC;AAAP;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI;AAAA,sBAAO,KAAKH,SAAL;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI;AAAA,4BAAK,KAAKd,KAAL,CAAWL,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAcH;;AA1EyB;;AA6E9B,eAAeH,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as dateFns from \"date-fns\";\n\n//Purpose: Comonponent that provides the current Date and Time\n\nclass Clock extends Component {\n    constructor(props){\n        super(props);\n\n        //This declared the state of time at the very beginning\n        this.state ={\n            time: new Date().toLocaleTimeString()\n        }\n        \n    }\n\n    time = {\n        currentMonth: new Date(),\n        currentDay:  new Date(),\n        currentTime: new Date()\n    }\n\n    //This happens when the component mount and the setInterval function get called with a call back function updateClock()\n    componentDidMount() {\n        this.intervalID = setInterval(() =>\n            this.updateClock(),\n            1000\n        );\n    }\n\n    //This section clears setInterval by calling intervalID so as to optimise memory\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    //This function set the state of the time to a new time\n    updateClock(){\n        this.setState({\n            time: new Date().toLocaleTimeString()\n        });\n    }\n\n    renderCurrentDay() {\n        const week = [\"Sunday\", \"Monday\", \"Tuesday\",\"Wednesday\",\"Thursday\", \"Friday\",\"Saturday\"]\n        var dayElement = this.time.currentDay\n        \n        var dayOfWeek = week[dayElement.getDay()]\n        \n        return (dayOfWeek);\n\n    }\n    renderDay(){\n        \n        const dateFormat = \"d MMMM yyyy\"\n        \n        return (\n            <div>\n                <p>Today is:</p>\n                <span>{this.renderCurrentDay()}</span> <br></br>\n                <span>{dateFns.format(this.time.currentMonth, dateFormat)}</span>\n            </div>\n        )\n    }\n  \n    render() {\n        return (\n            <>\n                <div className=\"timeBox\">\n                    <div className=\"date\">\n                        <span>{this.renderDay()}</span>\n                    </div>\n                    <div className=\"time\">\n                        <p> {this.state.time}</p>\n                        \n                    </div>\n                </div>\n            \n            </>\n        );\n    }\n}\n\nexport default Clock;"]},"metadata":{},"sourceType":"module"}